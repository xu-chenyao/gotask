// Code generated by goctl. DO NOT EDIT.
// goctl 1.9.0
// Source: blog.proto

package blogclient

import (
	"context"

	"gotask/task4_gozero/rpc/blog/blog"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Comment               = blog.Comment
	CreateCommentRequest  = blog.CreateCommentRequest
	CreateCommentResponse = blog.CreateCommentResponse
	CreatePostRequest     = blog.CreatePostRequest
	CreatePostResponse    = blog.CreatePostResponse
	DeletePostRequest     = blog.DeletePostRequest
	DeletePostResponse    = blog.DeletePostResponse
	GetPostRequest        = blog.GetPostRequest
	GetPostResponse       = blog.GetPostResponse
	ListCommentsRequest   = blog.ListCommentsRequest
	ListCommentsResponse  = blog.ListCommentsResponse
	ListPostsRequest      = blog.ListPostsRequest
	ListPostsResponse     = blog.ListPostsResponse
	Post                  = blog.Post
	UpdatePostRequest     = blog.UpdatePostRequest
	UpdatePostResponse    = blog.UpdatePostResponse

	Blog interface {
		CreatePost(ctx context.Context, in *CreatePostRequest, opts ...grpc.CallOption) (*CreatePostResponse, error)
		GetPost(ctx context.Context, in *GetPostRequest, opts ...grpc.CallOption) (*GetPostResponse, error)
		ListPosts(ctx context.Context, in *ListPostsRequest, opts ...grpc.CallOption) (*ListPostsResponse, error)
		UpdatePost(ctx context.Context, in *UpdatePostRequest, opts ...grpc.CallOption) (*UpdatePostResponse, error)
		DeletePost(ctx context.Context, in *DeletePostRequest, opts ...grpc.CallOption) (*DeletePostResponse, error)
		CreateComment(ctx context.Context, in *CreateCommentRequest, opts ...grpc.CallOption) (*CreateCommentResponse, error)
		ListComments(ctx context.Context, in *ListCommentsRequest, opts ...grpc.CallOption) (*ListCommentsResponse, error)
	}

	defaultBlog struct {
		cli zrpc.Client
	}
)

func NewBlog(cli zrpc.Client) Blog {
	return &defaultBlog{
		cli: cli,
	}
}

func (m *defaultBlog) CreatePost(ctx context.Context, in *CreatePostRequest, opts ...grpc.CallOption) (*CreatePostResponse, error) {
	client := blog.NewBlogClient(m.cli.Conn())
	return client.CreatePost(ctx, in, opts...)
}

func (m *defaultBlog) GetPost(ctx context.Context, in *GetPostRequest, opts ...grpc.CallOption) (*GetPostResponse, error) {
	client := blog.NewBlogClient(m.cli.Conn())
	return client.GetPost(ctx, in, opts...)
}

func (m *defaultBlog) ListPosts(ctx context.Context, in *ListPostsRequest, opts ...grpc.CallOption) (*ListPostsResponse, error) {
	client := blog.NewBlogClient(m.cli.Conn())
	return client.ListPosts(ctx, in, opts...)
}

func (m *defaultBlog) UpdatePost(ctx context.Context, in *UpdatePostRequest, opts ...grpc.CallOption) (*UpdatePostResponse, error) {
	client := blog.NewBlogClient(m.cli.Conn())
	return client.UpdatePost(ctx, in, opts...)
}

func (m *defaultBlog) DeletePost(ctx context.Context, in *DeletePostRequest, opts ...grpc.CallOption) (*DeletePostResponse, error) {
	client := blog.NewBlogClient(m.cli.Conn())
	return client.DeletePost(ctx, in, opts...)
}

func (m *defaultBlog) CreateComment(ctx context.Context, in *CreateCommentRequest, opts ...grpc.CallOption) (*CreateCommentResponse, error) {
	client := blog.NewBlogClient(m.cli.Conn())
	return client.CreateComment(ctx, in, opts...)
}

func (m *defaultBlog) ListComments(ctx context.Context, in *ListCommentsRequest, opts ...grpc.CallOption) (*ListCommentsResponse, error) {
	client := blog.NewBlogClient(m.cli.Conn())
	return client.ListComments(ctx, in, opts...)
}
